version: 2

jobs:
  build:
    docker:      
    - image: circleci/node:latest-browsers
    working_directory: ~/etg_scoring
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            npm install
      - run:
          name: run unit and component tests
          command: |
            export CHROME_BIN=google-chrome
            npm run test:unit
            npm run test:unit-int
  
  test:
    docker:      
    - image: finkingma/etg-highscore-ci:0.7.0
    environment:
      PACTBROKERURL: 'https://xebia.pact.dius.com.au/'
      MAPMAKERURL: 'http://etg-balancer-862594806.eu-central-1.elb.amazonaws.com:3000'
      HIGHSCOREURL: 'http://etg-balancer-862594806.eu-central-1.elb.amazonaws.com:4000'
      TAG: 'prod'
      JUNIT_REPORT_PATH: $CIRCLE_TEST_REPORTS/junit/
    working_directory: ~/etg_scoring
    steps:
      - checkout
      - run:
          name: install cypress
          command: |
            apt-get update
            apt-get install xvfb libgtk2.0-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2
            npm install
            npm install cypress
      - run:
          name: run cypress
          command: |
            npm run test:web
      - setup_remote_docker
      - run:
          name: run docker test
          command: |
            docker build -t $AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com/front:$CIRCLE_SHA1 .
            docker run -d -p 2000:2000 -e HIGHSCOREURL=http://localhost:4000 -e MAPMAKERURL=http://localhost:4000 --name front $AWS_ACCOUNT_ID.dkr.ecr.eu-central-1.amazonaws.com/front:$CIRCLE_SHA1; sleep 10
  deploy:
    docker:      
    - image: finkingma/etg-highscore-ci:0.7.0
    environment:
      PACTBROKERURL: 'https://xebia.pact.dius.com.au/'
      MAPMAKERURL: 'http://etg-balancer-862594806.eu-central-1.elb.amazonaws.com:3000'
      HIGHSCOREURL: 'http://etg-balancer-862594806.eu-central-1.elb.amazonaws.com:4000'
      TAG: 'prod'
      JUNIT_REPORT_PATH: $CIRCLE_TEST_REPORTS/junit/
    working_directory: ~/etg_scoring
    steps:
      - checkout
      - run:
          name: deploy to aws
          command: |
            ./deploy.sh
            npm run pact-publish
  manual:
    docker:      
    - image: finkingma/etg-highscore-ci:0.7.0
    working_directory: ~/etg_scoring
    steps:
      - run: 
          name: doe spul
          command: echo gooo
workflows:
  version: 2
  BDT:
    jobs:
    - build
    - test:
        requires:
        - build
    - manual:
        type: approval
        requires:
        - test
    - deploy:
        requires:
        - manual